plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'java-test-fixtures'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'fr.ignishky'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def vavrVersion = '0.10.4'

dependencies {
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'com.google.code.gson:gson'
    implementation 'io.vavr:vavr:' + vavrVersion
    implementation 'io.vavr:vavr-jackson:0.10.3'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testFixturesImplementation 'io.vavr:vavr:' + vavrVersion
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "Ignishky_mtg-collection"
    property "sonar.organization", "ignishky"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}
